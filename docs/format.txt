OpenCTM Format Specification - Format version 1.0
=================================================

Copyright (c) 2009 Marcus Geelnard


1. Introduction
---------------

This document describes version 1.0 of the OpenCTM file format.


2. File format specification
----------------------------

The structure of a OpenCTM file is as follows:

[Header]
[Body data]

Each part of the file is described in the following sections.


2.1 Data formats
----------------

All integer fields are stored in little endian format (least significant byte
first).

All floating point fields are stored in 32-bit binary IEEE 754 format (little
endian).

All strings are stored as a 32-bit integer string length (number of bytes)
followed by a UTF-8 format string (there is no zero termination and no BOM).


2.2 Header
----------

The file must start with a header, which looks as follows:

Offset  Type      Description
-------------------------------------------------------------------------------
0       Integer   Magic identifier (0x4d54434f, or "OCTM" when read as ASCII).
4       Integer   File format version (0x00000100 = version 1.0).
8       Integer   Compression method, which can be one of the following:
                    0x0030474d -> Use the MG0 compression method.
                    0x0031474d -> Use the MG1 compression method.
12      Integer   Vertex count.
16      Integer   Triangle count.
20      Integer   Boolean flags, or:ed together:
                    0x00000001 -> The file contains texture coordinates.
                    0x00000002 -> The file contains per-vertex normals.
24      String    File comment.

The length of the file header is varibale, since it contains fields of variable
length.


2.3 Body data
-------------

The body data follows immediately after the file header. Its file offset is
dictated by the length of the file header.

The format of the body data is specific for each compression method, which is
defined by the "Compression method" field in the header.

The body data contains the vertex, index, texture coordinate and normal data,
usually in a compressed form.


3. Recommendations
------------------

There are several aspects of a 3D model that are not mandated by this
specification. However, the specification gives a set of recommendations
(best practice) that should be followed whenever possible and applicable, in
order to improve interchangeability of 3D data between different softwares and
systems.

Here are the recommendations:

1) The "up" direction of 3D coordinates should be the positive Z axis.
2) The unit of 3D coordinates should be millimeters (mm).
3) Given the three coordinates of a triangle (P1, P2, P3), the front/up
   direction of the triangle ("flat normal") should be defined by the
   normalized cross product: (P2 - P1) X (P3 - P1).
